plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id "com.github.jruby-gradle.base" version "2.1.0-alpha.2"
    id "com.github.jruby-gradle.core" version "2.1.0-alpha.2"
    id "com.github.jruby-gradle.jar" version "2.1.0-alpha.1"
    id 'maven-publish'
    id 'java'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def ENV = System.getenv()

repositories {
    mavenCentral()
    maven {
        url = "https://maven.fabricmc.net/"
    }
}

configurations {
    shade
}

dependencies {
    implementation "net.fabricmc:fabric-loader:$loader_version"

    shade implementation("org.jruby:jruby-complete:$jruby_version")
}

java {
    withSourcesJar()
}

shadowJar {
    dependsOn(jar)
    configurations = [project.configurations.shade]
    archiveClassifier.set('dev')



    exclude 'org/objectweb/**/*'
}

build.dependsOn(shadowJar)

processResources {
    inputs.property 'version', project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jrubyJar {
    initScript "${projectDir}/src/main/java/RubyAdapter.rb"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(shadowJar)
            artifact(sourcesJar)
            pom.withXml {
                subprojects.each {
                    if (it.name != project.testmods_project) {
                        depNode.appendNode("groupId", it.group)
                        depNode.appendNode("artifactId", it.name)
                        depNode.appendNode("version", it.version)
                        depNode.appendNode("scope", "compile")
                    }
                }
            }
        }
    }

    repositories {
        if (ENV.MAVEN_PUBLISH_TOKEN) {
            maven {
                url 'https://repo.repsy.io/mvn/distant/rubyfabric'
                credentials {
                    username ENV.MAVEN_PUBLISH_USERNAME
                    password ENV.MAVEN_PUBLISH_TOKEN
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}
